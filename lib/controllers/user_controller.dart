import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import '../database/user_dao.dart';
import '../models/user.dart';

class UserController {
  final UserDAO _dao = UserDAO();

  // Sign-up a new user
  Future<String?> signUp(UserModel user, String password) async {
    try {
      // Check if the phone number is unique
      if (!await _dao.isPhoneNumberUnique(user.phone)) {
        return "Phone number already in use.";
      }

      // Check if the email is unique
      if (!await _dao.isEmailUnique(user.email)) {
        return "Email is already in use.";
      }

      // Create user with FirebaseAuth
      UserCredential userCredential = await FirebaseAuth.instance
          .createUserWithEmailAndPassword(email: user.email, password: password);

      // Retrieve UID generated by FirebaseAuth
      String userId = userCredential.user!.uid;

      // Save user details in Firestore
      UserModel newUser = UserModel(
        uid: userId,
        name: user.name,
        email: user.email,
        phone: user.phone,
      );
      await _dao.addUser(newUser);

      return null; // Success
    } catch (e) {
      return e.toString(); // Return error message
    }
  }


  // Login user
  Future<bool> loginUser(BuildContext context, String email, String password) async {
    try {
      UserCredential userCredential =
      await FirebaseAuth.instance.signInWithEmailAndPassword(
        email: email,
        password: password,
      );

      // Navigate to home screen
      Navigator.pushNamed(context, '/home');
      return true;
    } on FirebaseAuthException catch (e) {
      print('Error: ${e.message}');
      return false;
    }
  }

  // Get current user
  Future<UserModel?> getCurrentUser() async {
    try {
      // Retrieve the current user from FirebaseAuth
      User? firebaseUser = FirebaseAuth.instance.currentUser;

      if (firebaseUser != null) {
        // Fetch additional user details from Firestore
        UserModel? userDetails = await _dao.getUserByUID(firebaseUser.uid);
        return userDetails;
      } else {
        // No user is currently logged in
        return null;
      }
    } catch (e) {
      print('Error retrieving current user: ${e.toString()}');
      return null;
    }
  }

  Future<bool> logout() async{
    try {
      await FirebaseAuth.instance.signOut();
      return true;
    } catch (e) {
      return false;
    }
  }

  Future<bool> setName(String uid,String name) async{
    print("Controller");

    return _dao.setName(uid, name);
  }

  Future<bool> setPhoneNumber(String uid, String phone){
    return _dao.setPhoneNumber(uid, phone);
  }


}
